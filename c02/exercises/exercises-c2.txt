[A] Point out the errors , if any, in the following C statements:
     (a) x = (y+3);                               // No errors (as long as the varaibles are declared)
     (b) cir = 2 * 3.141593 * r;                  // No errors (as long as the varaibles are declared)
     (c) char = '3';                              // char is already reserved as a C keyword
     (d) 4/3 * 3.14 * r * r * r = vol_of_sphere;  // Assignment should be left to right
     (e) volume = a^3;                            // No cubed in C. Power is it's own function
     (f) area = 1/2 * base * height;              // Integer division of 1/2 leads to 0, not 0.5
     (g) si = p * r * n / 100;                    // No errors
     (h) area of circle = 3.14 * r * r;           // Variable name has spaces inbetween
     (i) peri_of_tri = a + b + c;                 // No errors
     (j) slope = (y2 - y1) divided by (x2 - x1);  // divided by has to be with a slash /
     (k) 3 = 4 = b = a;                           // Literals (3 & 4) can't be on the left side
     (l) count = count + 1;                       // No errors
     (m) char ch = '25Apr12';                     // Has to be a single character within single quotes ''



[B] Evaluate the following expressions and show their hierarchy
     (a) ans = 5 * b * b * x - 3 * a * y * y - 8 * b * b * x + 10 * a * y;
         (a = 3, b = 2, x = 5, y = 4, assume ans to be an int)
     
             = 5 * 2 * 2 * 5 - 3 * 3 * 4 * 4 - 8 * 2 * 2 * 5 + 10 * 3 * 4;
             = 100 - 144 - 160 + 120;
         ans = -84;


     (b) res = 4 * a * y / c - a * y / c;
         (a = 4, y = 1, c = 3, assume res to be an int)

             = 4 * 4 * 1 / 3 - 4 * 1 / 3;
             = 16 / 3 - 4 / 3;
             = 5 - 1;
         res = 4;


     (c) R = x * x + 2 * x + 1 / 2 * x * x + x + 1;
         (x = 3.5, assume R to be a float)

           = 3.5 * 3.5 + 2 * 3.5 + 1 / 2 * 3.5 * 3.5 + 3.5 + 1;
           = 12.25 + 7.0 + 0 + 3.5 + 1;
         R = 23.75;



[C] Indicate the order in which the following expressions would be evaluated:

     (a) g = 10 / 5 / 2 / 1;
         g = 1 

     (b) b = 3 / 2 + 5 * 4 / 3;
           = 1 + 6;
         b = 7;

     (c) a = b = c = 3 + 4;
                   = 7;
         c = 7;
         b = 7;
         a = 7;

     (d) x = 2 - 3 + 5 * 2 / 8 % 3;
           = 2 - 3 + 10 / 8 % 3;
           = 2 - 3 + 1 % 3;
           = 2 - 3 + 1;
         x = 0;

     (e) z = 5 % 3 / 8 * 3 + 4;
           = 2 / 8 * 3 + 4;
           = 0 * 3 + 4;
           = 0 + 4;
         z = 4;

     (f) y = z = -3 % -8 / 2 + 7;
               = -3 / 2 + 7;
               = -1 + 7;
               = 6;
         z = 6;
         y = 6;      



[D]



[E] State whether the following statements are True or False:
     (a) * or /, + or - represents the correct hierarchy of arithmetic operations in C.   // True
     (b) [] and {} can be used in arithmetic instructions.                                // False
     (c) Hierarchy decides which operator is used first.                                  // True          
     (d) In C, arithmetic instructions cannot contains constants on left side of =.       // True
     (e) In C ** operator is used for exponentiation operation.                           // False
     (f) % operator cannot be used with floats.                                           // True

[F] Fill in the blanks:
     (a) In y = 10 * x / 2 + z; ___ operation will be performed first.
                                 *

     (b) If a is an integer variable, a = 11 / 2 woul store ___ in a.
                                                             5

     (c) The expression, a = 22 / 7 * 5 / 3 would evaluate to ___.
                                                               5

     (d) The expression x = -7 % 2 - 8 would evaluate to ___.
                                                          -9

     (e) If d is a float the operation d = 2 / 7.0 would store ___ in d.
                                                            0.285714