[A] Which of the following are invalid C constants and why?
'3.15'    35,550    3.25e2    2e-3    'eLearning'    "show"    'Quest'    2^3    4 6 5 2

     answer = '3.15'      --> C constants enclosed in single quotes must contain only one character
              35,550      --> C constants can't use commas to separate numbers
              'eLearning' --> C constants enclosed in single quotes must contain only one character
              'Quest      --> C constants enclosed in single quotes must contain only one character
              2^3         --> Cubing a number needs a function, does not have a notation
              4 6 5 2     --> Numbers must be separated properly



[B] Which of the following are invalid variable names and why?
B'day           int      $hello       #HASH            dot.        number    totalArea    _main()
temp_in_Deg    total%      1st     stack-queue    variable name    %name%    salary

     answer = B'day         --> Contains an apostrophe
              int           --> Already a built in function in C
              $hello        --> Contains a special character
              #HASH         --> Begins with a hasthag
              dot.          --> Contains a period
              _main()       --> Contains brackets
              total%        --> contains a special character
              1st           --> Variable name can't start with a number
              stack-queue   --> Contains a hyphen
              variable name --> Spaces between words separate the variable
              %name%        --> Contains a special character



[C] State whether the following statements are True or False:

     (a) C language was developed by Dennis Ritchie
         [True]

     (b) Operating systems like Windows, UNIX, Lunix and Android are written in C
         [False] --> These operating systems are not fully wriiten in C

     (c) C language programs can easily interact with hardware of a PC/Laptop
         [True]

     (d) A real constant in C can be expressed in both Fractional and Exponential form
         [True]

     (e) A character variable can at a time store only one character
         [True]

     (f) The maximum value that an integer constant can have varies from one compiler to another
         [True]

     (g) Usually, all C statements are written in small case letters
         [True]

     (h) Spaces may be inserted between two words in a C statement
         [True]

     (i) Spaces cannot be present within a variable name
         [True]

     (j) C programs are converted into machine language with the help of a program called Editor
         [False] --> C programs are converted into machine language with the help of a Compiler

     (k) Most development environments provide an Editor to type a C program and a Compiler to 
         convert it into machine language
         [True]

     (l) int, char, float, real, integer, character, char, main, printf and scanf are keywords
         [False] --> real, integer and character are not keywords



[D] Match the following pairs:
     (a) \n         --> Escape sequence **
     (b) 3.145      --> Real constant
     (c) -6513      --> Integer constant 
     (d) 'D'        --> Character constant 
     (e) 4.25e-3    --> Exponential form
     (f) main()     --> Function
     (g) %f, %d, %c --> Format specifier **  (** means I got it wrong when I first did matched them)
     (h) ;          --> Statement terminator 
     (i) Constant   --> Literal **
     (j) Variable   --> Identifier
     (k) &          --> Address of operator **
     (l) printf()   --> Output function
     (m) scanf()    --> Input function



[E] Point out the errors, if any, in the following programs:
[a]
int main()
{
     int a; float b; int c;
     a = 25; b = 3.24; c = a + b * b - 35;
}
error(a) = c is declared as an int when it becomes a float.
         = No return statement
 
[b]
# include <stdio.h>
int main()
{
     int a = 35; float b = 3.24;
     printf("%d %f %d", a, b + 1.5, 235);
}
error(b) = No return statement

[c]
# include <stdio.h>
int main()
{
     int a, b, c;
     scanf("%d %d %d", a, b, c);
}
error(c) = Missing & in scanf before each a, b and c
         = No return statement

[d]
# include <stdio.h>
int main()
{
     int m1, m2, m3
     printf("Enter values of marks in 3 subjects")
     scanf("%d %d %d", &m1, &m2, &m3)
     printf("You entered %d %d %d", m1, m2, m3)
}
error(d) = Missing statement terminators (;)
         = No return statement



[F] 